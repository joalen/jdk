name: Run JPF

on:
  push:

jobs:
  run-jpf:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: b96b38c2c9a310d5fe49b2eda3e113a71223c7d1
  
    - name: Set up the latest JDK for the project
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '22'
        cache: maven
        
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential autoconf libx11-dev libxext-dev libxrender-dev libxtst-dev libxt-dev libasound2-dev libcups2-dev libfontconfig1-dev libfreetype6-dev libxrandr-dev libxinerama-dev
    
    - name: Install dependencies (macOS) 
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install autoconf
   
    - name: Build project with latest JDK
      run: | 
        bash configure
        make images

    - name: Set up JDK 11 for JPF
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: maven

    - name: Clone and build jpf-core
      run: |
        git clone https://github.com/javapathfinder/jpf-core.git /tmp/jpf-core
        cd /tmp/jpf-core
        ./gradlew buildJars

    - name: Run JPF on JAR files
      shell: bash
      run: |
        #!/bin/bash
        set +e 
        
        directory=$(pwd)
        runjpf_jar="/tmp/jpf-core/build/RunJPF.jar"
        jar_files=$(find "$directory" -type f -name "*.jar")
        for jar_file in $jar_files; 
        do
            jar_dir=$(dirname "$jar_file")
            main_class=$(unzip -p "$jar_file" META-INF/MANIFEST.MF | grep -i 'Main-Class' | awk -F': ' '{print $2}' | tr -d '\r')
            if [ -z "$main_class" ]; then
                continue
            fi
            command="java -jar $runjpf_jar +classpath=$jar_file $main_class"
            $command
        done
